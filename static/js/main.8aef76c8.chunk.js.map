{"version":3,"sources":["action-creators/updateDisplayText.js","components/DrumPad.js","components/Display.js","action-creators/togglePower.js","components/Switch.js","action-creators/changeVolume.js","components/VolumeBar.js","components/Space.js","components/DrumMachine.js","App.js","serviceWorker.js","store.js","reducers/rootReducer.js","index.js"],"names":["UPDATE_DISPLAY_TEXT","action_creators_updateDisplayText","text","type","DrumPad","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","playAudio","highlightBkcolor","isOn","audioRef","current","currentTime","volume","play","updateDisplayText","id","padRef","style","backgroundColor","setTimeout","state","originalBkcolor","bind","assertThisInitialized","React","createRef","passFunc","setState","load","react_default","a","createElement","ref","className","onClick","src","preload","Component","connect","dispatch","Display","displayText","TOGGLE_POWER","Switch","toggle","switchRef","elem","replace","togglePower","CHANGE_VOLUME","VolumeBar","dragSelector","e","x0","window","clientX","deltaX","selector","selectorRef","document","onmousemove","preventDefault","newLeft","offsetLeft","parentWidth","parseInt","getComputedStyle","parentNode","getPropertyValue","selectorWidth","getBoundingClientRect","left","changeVolume","calcVolume","onmouseup","num","Math","round","onMouseDown","Space","marginTop","marginRight","marginBottom","marginLeft","DrumMachine","property","func","newState","_this2","getElementsByTagName","addEventListener","key","toUpperCase","playAudioQ","playAudioW","playAudioE","playAudioA","playAudioS","playAudioD","playAudioZ","playAudioX","playAudioC","console","log","components_DrumPad","components_Display","components_Space","components_Switch","components_VolumeBar","App","components_DrumMachine","Boolean","location","hostname","match","store","createStore","action","copyState","assign","drumPadToPlay","ReactDOM","render","es","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8aef76c8.chunk.js","sourcesContent":["export const UPDATE_DISPLAY_TEXT = 'UPDATE_DISPLAY_TEXT';\r\nexport default (text) => ({type: UPDATE_DISPLAY_TEXT, text});","import React, { Component } from 'react';\r\nimport '../components-style/DrumPad.css';\r\nimport { connect } from 'react-redux';\r\nimport updateDisplayText from '../action-creators/updateDisplayText';\r\n\r\n\r\nclass DrumPad extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.playAudio = this.playAudio.bind(this);\r\n        this.highlightBkcolor = this.highlightBkcolor.bind(this);\r\n        this.state = {}\r\n        this.audioRef = React.createRef(); // reference to this audio element in DOM\r\n        this.padRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.passFunc(\"playAudio\" + this.props.text, this.playAudio);\r\n        this.setState(\r\n            {originalBkcolor: this.padRef.current.style.backgroundColor});\r\n        this.audioRef.current.load();\r\n    }\r\n\r\n\r\n    playAudio = () => {\r\n        this.highlightBkcolor();\r\n        if (!this.props.isOn) return;\r\n\r\n        this.audioRef.current.currentTime = 0; // plays from beggining\r\n        this.audioRef.current.volume = this.props.volume/100;\r\n        this.audioRef.current.play();\r\n        this.props.updateDisplayText(this.props.id);\r\n        \r\n    }\r\n\r\n    highlightBkcolor = () => {\r\n        // sync to CSS .drum-pad:active bkcolor\r\n        this.padRef.current.style.backgroundColor = \"rgb(100, 86, 59)\";\r\n        setTimeout(() => this.padRef.current.style.backgroundColor = \r\n            this.state.originalBkcolor, 100);\r\n    }\r\n    \r\n\r\n    render() {    \r\n        return (\r\n            <button ref={this.padRef} className=\"drum-pad\" onClick={this.playAudio} \r\n            id={this.props.id}>\r\n                <audio ref={this.audioRef} id={this.props.text} src={this.props.src} \r\n                    type={this.props.type} preload=\"auto\" className=\"clip\"></audio>\r\n                <label>{this.props.text}</label>\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isOn: state.isOn,\r\n    volume: state.volume\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    updateDisplayText: (text) => dispatch(updateDisplayText(text))\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DrumPad);","import React, { Component } from 'react';\r\nimport '../components-style/Display.css';\r\nimport { connect } from 'react-redux';\r\n\r\nclass Display extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"display\"> {/* change this to className=\"display\" and update css file, id is used to pass FFC's tests */}\r\n                {this.props.displayText}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    displayText: state.isOn ? state.displayText : \"\"\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps)(Display);","export const TOGGLE_POWER = 'TOGGLE_POWER';\r\nexport default () => ({type: TOGGLE_POWER});","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport '../components-style/Switch.css';\r\nimport togglePower from '../action-creators/togglePower';\r\n\r\nclass Switch extends Component  {\r\n    constructor(props) {\r\n        super(props);\r\n        this.toggle = this.toggle.bind(this);\r\n        this.switchRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.toggle();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.toggle();\r\n    }\r\n\r\n\r\n    toggle() {\r\n        let elem = this.switchRef.current;\r\n        this.props.isOn ? elem.className += \" active\"\r\n                        : elem.className = elem.className.replace(\" active\", \"\");\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"switch-container\">\r\n                <label>Power</label>\r\n                <button ref={this.switchRef} className=\"switch\" onClick={this.props.togglePower}></button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isOn: state.isOn\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    togglePower: () => dispatch(togglePower())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Switch);","export const CHANGE_VOLUME = 'CHANGE_VOLUME';\r\nexport default (volume) => ({type: CHANGE_VOLUME, volume});","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport '../components-style/VolumeBar.css';\r\nimport changeVolume from '../action-creators/changeVolume';\r\nimport updateDisplayText from '../action-creators/updateDisplayText';\r\n\r\nclass VolumeBar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.selectorRef = React.createRef();\r\n    }\r\n\r\n\r\n    /* x0: x-position of selector when movement frame began (frame means each onMouseMove event)\r\n    ** deltaX: x-position increase or decrease (relative to x0) when movement frame ended\r\n    */\r\n    dragSelector = (e) => {\r\n        e = e || window.e;\r\n        let x0 = e.clientX, deltaX = 0;\r\n        let selector = this.selectorRef.current;\r\n\r\n        document.onmousemove = (e) => {\r\n            e.preventDefault();\r\n            deltaX = e.clientX - x0;\r\n            x0 = e.clientX; // resets x0\r\n            let newLeft = selector.offsetLeft + deltaX; // offsetLeft gives x-position relative to parent\r\n            let parentWidth = parseInt(window.getComputedStyle(selector.parentNode).getPropertyValue('width'));\r\n            let selectorWidth = parseInt(window.getComputedStyle(selector).getPropertyValue('width'));\r\n            if (newLeft < 0) { // left bound\r\n                newLeft = 0;\r\n                x0 = selector.getBoundingClientRect().left;\r\n                // getBoundingClientRect().left gives x-position relative to viewport (and so does clientX)\r\n            }\r\n            if (newLeft > parentWidth - selectorWidth) { // right bound\r\n                newLeft = parentWidth - selectorWidth;\r\n                x0 = selector.getBoundingClientRect().left;\r\n            }\r\n            selector.style.left = newLeft + \"px\";\r\n            this.props.changeVolume(this.calcVolume(newLeft, parentWidth, selectorWidth));\r\n        }\r\n        document.onmouseup = (e) => {\r\n            document.onmousemove = null;\r\n            document.onmouseup = null;\r\n            this.props.updateDisplayText(\"\");\r\n        }\r\n    }\r\n\r\n    calcVolume = (num, parentWidth, selectorWidth) => { // from 0-x to 0-100\r\n        return Math.round((num/(parentWidth - selectorWidth))*100);\r\n    }\r\n    \r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"volume-bar-container\">\r\n                <div className=\"volume-bar\">\r\n                    <div className=\"volume-selector\" ref={this.selectorRef} onMouseDown={this.dragSelector}></div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    changeVolume: (volume) => dispatch(changeVolume(volume)),\r\n    updateDisplayText: (text) => dispatch(updateDisplayText(text))\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(VolumeBar);","import React from 'react';\r\n\r\nconst Space = (props) => {\r\n    return (\r\n        <div style={{marginTop: props.marginTop, marginRight: props.marginRight,\r\n                    marginBottom: props.marginBottom, marginLeft: props.marginLeft}}></div>\r\n    );\r\n}\r\n\r\nexport default Space;","import React, { Component } from 'react';\r\nimport DrumPad from './DrumPad';\r\nimport '../components-style/DrumMachine.css';\r\nimport Display from './Display';\r\nimport { connect } from 'react-redux';\r\nimport Switch from './Switch';\r\nimport VolumeBar from './VolumeBar';\r\nimport Space from './Space';\r\n\r\nclass DrumMachine extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.passFunc = this.passFunc.bind(this);\r\n    }\r\n\r\n    passFunc(property, func) {\r\n        let newState = {};\r\n        newState[property] = func;\r\n        this.setState(newState);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.getElementsByTagName(\"body\")[0].addEventListener(\"keydown\", (e) => {\r\n            switch (e.key.toUpperCase()) {\r\n                case 'Q':\r\n                    this.state.playAudioQ(); // plauAudio always triggers highlighting\r\n                    break;\r\n                case 'W':\r\n                    this.state.playAudioW();\r\n                    break;\r\n                case 'E':\r\n                    this.state.playAudioE();\r\n                    break;\r\n                case 'A':\r\n                    this.state.playAudioA();\r\n                    break;\r\n                case 'S':\r\n                    this.state.playAudioS();\r\n                    break;\r\n                case 'D':\r\n                    this.state.playAudioD();\r\n                    break;\r\n                case 'Z':\r\n                    this.state.playAudioZ();\r\n                    break;\r\n                case 'X':\r\n                    this.state.playAudioX();\r\n                    break;\r\n                case 'C':\r\n                    this.state.playAudioC();\r\n                    break;\r\n                default:\r\n                    console.log(\"listening...\");\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div id=\"drum-machine\"> {/* should be className instead of id, but FFC tests requires id */}\r\n                <div className=\"pads-container\">\r\n                    <DrumPad text=\"Q\" \r\n                    src=\"https://sampleswap.org/samples-ghost/DRUMS%20(SINGLE%20HITS)/Claps/41[kb]c4.aif.mp3\" \r\n                    id=\"Clap1\" type=\"audio/mp3\" passFunc={this.passFunc}></DrumPad>\r\n                    <DrumPad text=\"W\"\r\n                    src=\"https://sampleswap.org/samples-ghost/DRUMS%20(SINGLE%20HITS)/Claps/70[kb]c1.aif.mp3\"\r\n                    id=\"Clap2\" type=\"audio/mp3\" passFunc={this.passFunc}></DrumPad>\r\n                    <DrumPad text=\"E\"\r\n                    src=\"https://sampleswap.org/samples-ghost/DRUMS%20(SINGLE%20HITS)/Claps/36[kb]c2.aif.mp3\"\r\n                    id=\"Clap3\" type=\"audio/mp3\" passFunc={this.passFunc}></DrumPad>\r\n                    <DrumPad text=\"A\"\r\n                    src=\"https://sampleswap.org/samples-ghost/DRUMS%20(SINGLE%20HITS)/Western%20and%20Latin%20Percussion/13[kb]bell1.aif.mp3\"\r\n                    id=\"Bell1\" type=\"audio/mp3\" passFunc={this.passFunc}></DrumPad>\r\n                    <DrumPad text=\"S\"\r\n                    src=\"https://sampleswap.org/samples-ghost/DRUMS%20(SINGLE%20HITS)/Western%20and%20Latin%20Percussion/15[kb]bell2.aif.mp3\"\r\n                    id=\"Bell2\" type=\"audio/mp3\" passFunc={this.passFunc}></DrumPad>\r\n                    <DrumPad text=\"D\"\r\n                    src=\"https://sampleswap.org/samples-ghost/DRUMS%20(SINGLE%20HITS)/Western%20and%20Latin%20Percussion/5[kb]shaker.aif.mp3\"\r\n                    id=\"Shaker\" type=\"audio/mp3\" passFunc={this.passFunc}></DrumPad>\r\n                    <DrumPad text=\"Z\"\r\n                    src=\"https://sampleswap.org/samples-ghost/DRUMS%20(SINGLE%20HITS)/Kicks/16[kb]808bd.aif.mp3\"\r\n                    id=\"Kick\" type=\"audio/mp3\" passFunc={this.passFunc}></DrumPad>\r\n                    <DrumPad text=\"X\"\r\n                    src=\"https://sampleswap.org/samples-ghost/DRUMS%20(SINGLE%20HITS)/Rides/81[kb]909-bright-ride.aif.mp3\"\r\n                    id=\"Rider\" type=\"audio/mp3\" passFunc={this.passFunc}></DrumPad>\r\n                    <DrumPad text=\"C\"\r\n                    src=\"https://sampleswap.org/samples-ghost/DRUMS%20(SINGLE%20HITS)/Gongs%20and%20Super%20Crashes/288[kb]down_in_china.aif.mp3\"\r\n                    id=\"Crash\" type=\"audio/mp3\" passFunc={this.passFunc}></DrumPad>\r\n                </div>\r\n                <div className=\"right-container\">\r\n                    <Display></Display>\r\n                    <Space marginTop=\"2rem\"></Space>\r\n                    <Switch></Switch>\r\n                    <Space marginTop=\"2rem\"></Space>\r\n                    <VolumeBar></VolumeBar>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isOn: state.isOn,\r\n    displayText: state.displayText\r\n});\r\n\r\nexport default connect(mapStateToProps)(DrumMachine);","import React, { Component } from 'react';\nimport './App.css';\nimport DrumMachine from './components/DrumMachine';\nimport Space from './components/Space';\n\nclass App extends Component {\n\n  \n  render() {\n    return (\n      <div className=\"App\">\n        <header id=\"main-header\">Drum Machine</header>\n        <Space marginTop=\"6rem\"></Space>\n        <DrumMachine></DrumMachine>\n      </div>\n    );\n    }\n}\n\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createStore } from 'redux';\r\nimport rootReducer from './reducers/rootReducer';\r\n\r\nconst INITIAL_STATE = {displayText: \"\", drumPadToPlay: \"\", isOn: true, volume: 100};\r\nconst store = createStore(rootReducer, INITIAL_STATE);\r\nexport default store;","import { UPDATE_DISPLAY_TEXT } from \"../action-creators/updateDisplayText\";\r\nimport { TOGGLE_POWER } from \"../action-creators/togglePower\";\r\nimport { CHANGE_VOLUME } from \"../action-creators/changeVolume\";\r\n\r\n\r\n\r\n\r\nexport default function rootReducer(state, action) {\r\n    let copyState = Object.assign({}, state);\r\n    switch (action.type) {\r\n        case UPDATE_DISPLAY_TEXT:\r\n            return Object.assign(copyState, {displayText: action.text});\r\n        case TOGGLE_POWER:\r\n            return Object.assign(copyState, {isOn: !state.isOn});\r\n        case CHANGE_VOLUME:\r\n            return Object.assign(copyState, {volume: action.volume, displayText: \"Volume: \" + action.volume});\r\n        default:\r\n            return copyState;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n, document.getElementById('root'));\n\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}